webpackJsonp([0],{202:function(n,e,t){"use strict";function s(n){return"sensors."+n+".data"}n.exports=function(n){function e(n){for(var e="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789",t="",s=0;s<n;s++){var o=Math.floor(Math.random()*e.length);t+=e.substring(o,o+1)}return t}function o(){var n=[];for(var e in f.value.sensors){var t=f.value.sensors[e];t.id===e&&"string"==typeof t.name&&"string"==typeof t.twilio_sim_sid?e in h?t.name===h[e].info.name&&t.twilio_sim_sid===h[e].info.twilio_sim_sid||(console.log("Updating sensor",t),h[e].info=t):(console.log("Loading new sensor",t),h[e]={info:t}):(console.warn("Invalid sensor configuration, removing from the list: ",e,t),n.push(e))}for(var e in h)e in f.value.sensors||(console.log("Deleting sensor",t),delete h[e]);return n}function i(n,e){return n.id&&n.id.match(/^[a-zA-Z0-9]+$/)?n.name?!(!n.twilio_sim_sid||!n.twilio_sim_sid.match(/^DE[a-z0-9]{32}$/))||(e("sensor sim SID is invalid: "+n.twilio_sim_sid),!1):(e("sensor name is not specified"),!1):(e("sensor id is invalid: "+n.id),!1)}function r(){var n=e(16);return{token:n,hash:d.createHash("sha512").update(n).digest("hex")}}const a=t(4),d=t(43),l=t(318).Client;var c,u,f,h={};return{initialized:a.Deferred(),sensors:h,updateToken:function(n){var e=this;return a.get("/userauthenticate?username=twilio&pincode=928462",function(t){t.success?(console.log("token updated:",t),u=t.token,c?c.updateToken(u):c=new l(u),n&&n(u),setTimeout(e.updateToken.bind(e),1e3*t.ttl*.96)):console.error("failed to authenticate the user: ",t.error)}).fail(function(n,t,s){console.error("failed to send authentication request:",t,s),setTimeout(e.updateToken.bind(e),1e4)})},fetchConfiguration:function(){return c.document("app.configuration").then(function(n){f=n;var e,t=null;return n.value.sensors?(e=o(),e.length&&(null===t&&(t=a.extend(!0,n.value,{})),e.forEach(function(n){delete t.sensors[n]}))):(console.warn("sensors is not configured, creating an empty list"),null===t&&(t=a.extend(!0,n.value,{})),t.sensors={}),t}).then(function(n){if(null!==n)return f.set(n).then(function(){console.log("app configuration updated with new value:",n)})})},addSensor:function(e,t){if(i(e,t)){if(e.id in f.value.sensors)return t("Sensor with the same ID exists");e.created_at=(new Date).getTime();var d=r();e.hash=d.hash,f.mutate(function(n){return n.sensors||(n.sensors={}),n.sensors[e.id]=e,n}).then(function(){return Promise.all([c.map(s(e.id)).then(function(n){return Promise.all[(n.set("humidity",{data:-1}),n.set("weight",{data:-1}),n.set("temperature",{data:-1}))]})])}).then(function(){o(),t(null,a.extend(!0,h[e.id].info,{token:d.token})),n.refresh()}).catch(function(n){t(n)})}},updateSensor:function(e,t){f.mutate(function(n){return e.id in n.sensors?n.sensors[e.id]=a.extend(!0,e,{hash:n.sensors[e.id].hash}):t("Sensor is not in the list"),n}).then(function(){o(),t(null),n.refresh()}).catch(function(n){t(n)})},regenToken:function(e,t){var s=r();f.mutate(function(n){if(!(e in n.sensors))throw"unknown sensor: "+e;return n.sensors[e].hash=s.hash,n}).then(function(){o(),t(a.extend(!0,h[e].info,{token:s.token})),n.refresh()}).catch(function(n){console.error("regenToken",n)})},deleteSensor:function(e){f.mutate(function(n){return delete n.sensors[e],n}).then(function(){o(),n.refresh()}).then(function(){c.map(s(e)).then(function(n){n.removeMap()})})},init:function(){var e=this;this.updateToken(function(t){e.fetchConfiguration().then(function(){n.refresh()}).then(function(){e.initialized.resolve()})})}}}},203:function(n,e,t){var s={templateUrl:t(292),init:function(app,n){n.sensors=app.sensors,n.noSensor=function(){return 0===Object.keys(app.sensors).length}}};n.exports=s},204:function(n,e,t){var s=t(4),o={templateUrl:t(293),init:function(app,n){n.sensors=app.sensors,n.newSensor={},n.addSensor=function(){app.addSensor(angular.copy(n.newSensor),function(e,t){e?s("#add-sensor-failed").text(JSON.stringify(e)):(n.editedSensorInfo=t,s(".add-sensor").hide(),s(".add-sensor-show").fadeIn(333),n.$apply())})},n.editSensor=function(e){n.editedSensorInfo=app.sensors[e].info,s(".edit-sensor").fadeIn(333)},n.updateSensor=function(){app.updateSensor(angular.copy(n.editedSensorInfo),function(e){e?s("#edit-sensor-failed").text(JSON.stringify(e)):(s(".edit-sensor").hide(),n.$apply())})},n.deleteSensor=function(n){app.deleteSensor(n)},n.regenTokenForSensor=function(e){app.regenToken(e,function(e){n.editedSensorInfo=e})},s(".add-sensor-show").click(function(){s(this).hide(),s(".add-sensor").fadeIn(333)}),s(".add-sensor-cancel").click(function(){s(".add-sensor").hide(),s(".add-sensor-show").fadeIn(333)}),s(".edit-sensor-cancel").click(function(){n.editedSensorInfo=null,s(".edit-sensor").hide(),n.$apply()})}};n.exports=o},206:function(n,e,t){n.exports=t.p+"index.html"},207:function(n,e){n.exports=angular},208:function(n,e){n.exports=void 0},209:function(n,e,t){"use strict";const s=t(4),o=t(207),i=t(0);t(208);t(30),t(31),t(206);const r=t(203),a=t(204);var d,l,App=t(202);window.app=new App({refresh:function(){l.$apply()}}),o.module("app",["ngRoute"]).controller("DashboardViewCtrl",["$scope",function(n){l=n,d=r,s.when(app.initialized).done(function(){r.init(app,n)})}]).controller("SensorListViewCtrl",["$scope",function(n){l=n,d=a,s.when(app.initialized).done(function(){a.init(app,n)})}]).config(["$routeProvider",function(n){n.when("/dashboard",{controller:"DashboardViewCtrl",templateUrl:r.templateUrl}).when("/sensors",{controller:"SensorListViewCtrl",templateUrl:a.templateUrl}).otherwise({redirectTo:"/dashboard"})}]).filter("moment",function(){return function(n){return i(n).format("MMM DD YYYY @ hh:mm")}})},292:function(n,e){var t="views/dashboard.html";window.angular.module("ng").run(["$templateCache",function(n){n.put(t,'<h1>Active Industrial Sensors</h1>\n\n<p ng-show="noSensor()">We aren\'t tracking any Industrial Sensors right now. Click the Add Industrial Sensor button to get started.</p>\n\n<div ng-repeat="sensor in sensors" class="jumbotron sensor sensor{{ sensor.info.id }} chalk-background">\n  <h3>\n    {{ sensor.info.name }}\n  </h3>\n\n  <div class="row">\n    <div class="col-lg-8 col-lg-offset-2 img-parent">\n      <div class="sensor-feed">\n\n      </div>\n    </div>\n  </div>\n  <div class="row motion_stats">\n\n  </div>\n</div>\n')}]),n.exports=t},293:function(n,e){var t="views/sensor_list.html";window.angular.module("ng").run(["$templateCache",function(n){n.put(t,'<div class="row">\n  <div class="col-lg-12">\n    <div class="page-header">\n      <h1 id="tables">Configuration</h1>\n    </div>\n\n    <div class="bs-component">\n      <table class="table table-striped table-hover">\n        <thead>\n          <tr>\n            <th><strong>Id</strong></th>\n            <th><strong>Name</strong></th>\n            <th><strong>SIM Sid</strong></th>\n            <th><strong>Token</strong></th>\n            <th><strong>Created</strong></th>\n            <th><strong>Actions</strong></th>\n          </tr>\n        </thead>\n        <tbody>\n          <tr ng-repeat="sensor in sensors" class="chalk-background" ng-class="{\'text-success\': editedSensorInfo.id === sensor.info.id}">\n            <td>{{ sensor.info.id }}</td>\n            <td>{{ sensor.info.name }}</td>\n            <td>{{ sensor.info.twilio_sim_sid }}</td>\n            <td>\n                <small ng-if="editedSensorInfo.id === sensor.info.id" class="text-warning">{{ editedSensorInfo.token }}</small>\n                <button ng-click="regenTokenForSensor(sensor.info.id)" ng-if="editedSensorInfo.id !== sensor.info.id" class="btn btn-xs btn-success">Regenerate</button>\n            </td>\n            <td>{{ sensor.info.created_at | moment }}</td>\n            <td>\n                <button ng-click="editSensor(sensor.info.id)" class="btn btn-xs btn-success">Edit</button>\n                &nbsp;\n                <button ng-click="deleteSensor(sensor.info.id)" class="btn btn-xs btn-danger">Delete</button>\n            </td>\n          </tr>\n        </tbody>\n      </table>\n    <div id="source-button" class="btn btn-primary btn-xs" style="display: none;">&lt; &gt;</div></div>\x3c!-- /example --\x3e\n  </div>\n</div>\n\n<button class="btn btn-primary add-sensor-show">New Industrial Sensor</button>\n\n<div class="row add-sensor chalk-background">\n  <div class="col-lg-12">\n    <form class="form-horizontal" ng-submit="addSensor()">\n      <fieldset>\n        <h2>Add Industrial Sensor</h2>\n\n        <div class="form-group">\n          <label for="id" class="col-lg-2">Id</label>\n          <div class="col-lg-12">\n            <input type="text" class="form-control" ng-model="newSensor.id" id="id" placeholder="">\n            <p>This can be any unique alphanumeric identifier.</p>\n          </div>\n        </div>\n\n        <div class="form-group">\n          <label for="name" class="col-lg-2">Name</label>\n          <div class="col-lg-12">\n            <input type="text" class="form-control" ng-model="newSensor.name" id="name" placeholder="">\n            <p>Give your Industrial Sensor a descriptive name for the dashboard.</p>\n          </div>\n        </div>\n\n        <div class="form-group">\n          <label for="twilio_sim_sid" class="col-lg-2">Twilio SIM Sid</label>\n          <div class="col-lg-12">\n            <input type="text" class="form-control" ng-model="newSensor.twilio_sim_sid" id="twilio_sim_sid" placeholder="">\n            <p>You can find your SIM Sid in Twilio\'s <a href="https://www.twilio.com/console/wireless/sims/">Console</a>.</p>\n          </div>\n        </div>\n\n        <div class="form-group">\n          <div class="col-lg-12">\n            <button type="submit" class="btn btn-primary">Submit</button>\n            <button type="reset" class="btn btn-default add-sensor-cancel">Cancel</button>\n          </div>\n        </div>\n\n        <p class="text-warning" id="add-sensor-failed"></p>\n      </fieldset>\n    </form>\n  </div>\n</div>\n\n<div class="row edit-sensor">\n  <div class="col-lg-12">\n    <form class="form-horizontal" ng-submit="updateSensor()">\n      <fieldset>\n        <legend>Update Industrial Sensor</legend>\n\n        <div class="form-group">\n          <label for="id" class="col-lg-2">Id</label>\n          <div class="col-lg-12">\n            <input type="text" class="form-control" ng-model="editedSensorInfo.id" id="id" value="{{ editedSensorInfo.id }}" placeholder="" disabled>\n            <p>This can be any unique alphanumeric identifier.</p>\n          </div>\n        </div>\n\n        <div class="form-group">\n          <label for="name" class="col-lg-2">Name</label>\n          <div class="col-lg-12">\n            <input type="text" class="form-control" ng-model="editedSensorInfo.name" id="name" value="{{ editedSensorInfo.name }}" placeholder="">\n            <p>Give your Industrial Sensor a descriptive name for the dashboard.</p>\n          </div>\n        </div>\n\n        <div class="form-group">\n          <label for="twilio_sim_sid" class="col-lg-2">Twilio SIM Sid</label>\n          <div class="col-lg-12">\n            <input type="text" class="form-control" ng-model="editedSensorInfo.twilio_sim_sid" id="twilio_sim_sid" value="{{ editedSensorInfo.twilio_sim_sid }}" placeholder="">\n            <p>You can find your SIM Sid in Twilio\'s <a href="https://www.twilio.com/console/wireless/sims/">Console</a>.</p>\n          </div>\n        </div>\n\n        <div class="form-group">\n          <div class="col-lg-10">\n            <button type="submit" class="btn btn-primary">Submit</button>\n            <button type="reset" class="btn btn-default edit-sensor-cancel">Cancel</button>\n          </div>\n        </div>\n\n        <p class="text-warning" id="edit-sensor-failed"></p>\n      </fieldset>\n    </form>\n  </div>\n</div>\n')}]),n.exports=t},318:function(n,e){n.exports=Twilio.Sync}},[209]);
//# sourceMappingURL=index.js.map